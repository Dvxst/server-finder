local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

-- Wait for fruit system and GUI elements
local fruitChooser = player:WaitForChild("PlayerGui"):WaitForChild("MainGUI"):WaitForChild("FruitChooser")
local collectEvent = ReplicatedStorage:WaitForChild("CollectFruit", 10)

-- List of fruits to include in the filter GUI
local fruitList = { "Carrot", "Tomato", "Apple", "Moon Melon", "Moon Mango", "Ember Lily", "Rose Lily", "Flower Cabbage" }

-- GUI setup
local gui = Instance.new("ScreenGui", player.PlayerGui)
gui.Name = "FruitCollectorGUI"

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 240, 0, 40 + (#fruitList * 30))
frame.Position = UDim2.new(0.5, -120, 0.6, -150)
frame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
frame.BorderSizePixel = 0

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 40)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "Fruit Auto Collector"
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextSize = 16

local checkboxes = {}
local selectedFruits = {}

-- Create checkboxes
for i, fruit in ipairs(fruitList) do
    local cb = Instance.new("TextButton", frame)
    cb.Size = UDim2.new(1, -20, 0, 30)
    cb.Position = UDim2.new(0, 10, 0, 40 + (i - 1) * 30)
    cb.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    cb.Text = "[ ] " .. fruit
    cb.TextColor3 = Color3.new(1, 1, 1)
    cb.Font = Enum.Font.Gotham
    cb.TextSize = 14

    cb.MouseButton1Click:Connect(function()
        if selectedFruits[fruit] then
            selectedFruits[fruit] = nil
            cb.Text = "[ ] " .. fruit
        else
            selectedFruits[fruit] = true
            cb.Text = "[X] " .. fruit
        end
    end)

    checkboxes[fruit] = cb
end

-- Status label
local status = Instance.new("TextLabel", frame)
status.Size = UDim2.new(1, -20, 0, 30)
status.Position = UDim2.new(0, 10, 1, -35)
status.BackgroundTransparency = 1
status.Text = "Status: Idle"
status.TextColor3 = Color3.new(1, 1, 1)
status.Font = Enum.Font.Gotham
status.TextSize = 13

-- Auto collect loop
task.spawn(function()
    while true do
        local selected = fruitChooser:FindFirstChild("SelectedFruit")
        if selected and selectedFruits[selected.Value] and collectEvent then
            collectEvent:FireServer(selected.Value)
            status.Text = "Collected: " .. selected.Value
        end
        task.wait(1)
    end
end)
